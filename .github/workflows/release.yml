# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

name: Elixir CI

on:
  push:
    branches: [ "main" ]

permissions:
  contents: read

jobs:
  setup:

    name: Setup
    runs-on: ubuntu-24.04-arm

    steps:
    - uses: actions/checkout@v4
    - name: Set up Elixir
      uses: erlef/setup-beam@v1.18.2
      with:
        elixir-version: '1.18.1' # [Required] Define the Elixir version
        otp-version: '27.0'      # [Required] Define the Erlang/OTP version
    - name: Restore dependencies cache
      uses: actions/cache@v3
      with:
        path: deps
        key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
        restore-keys: ${{ runner.os }}-mix-
    - name: Install dependencies
      run: mix deps.get
  build:
    name: Build
    runs-on: ubuntu-24.04-arm

    steps:
    - name: Release
      run: mix release
      env:
        MIX_ENV: 'prod'
  deploy:
    name: Deploy
    runs-on: ubuntu-24.04-arm

    steps:
    - name: Deploy to server
      run: |
        mkdir ~/.ssh
        echo "$SSH_PRIVATE_KEY" > ~/.ssh/private.key
        sudo chmod 600 ~/.ssh/private.key
        echo "$SSH_KNOWN_HOSTS" > ~/.ssh/known_hosts
        rsync --no-perms -avzrO -e "ssh -i ~/.ssh/private.key" _build/prod/rel/famdash/ github@$SERVER_IP:/opt/famdash/
        ssh -i ~/.ssh/private.key github@$SERVER_IP "PORT=80 DATABASE_URL=$DATABASE_URL /opt/famdash/bin/famdash start"
      env:
        SSH_PRIVATE_KEY: ${{secrets.SSH_PRIVATE_KEY}}
        SSH_KNOWN_HOSTS: ${{secrets.SSH_KNOWN_HOSTS}}
        SERVER_IP: ${{secrets.SERVER_IP}}
        DATABASE_URL: ecto://postgres:${{secrets.DATABASE_PASSWORD}}@localhost/famdash
    
